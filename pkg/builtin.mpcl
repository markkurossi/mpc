// -*- go -*-
//
// Copyright (c) 2020-2024 Markku Rossi
//
// All rights reserved.
//

// Package builtin defines MPCL builtin functions and types. This
// package is always imported and the functions and types can be used
// in all programs.
package builtin

// bool is a boolean value true or false.
type bool bool

// byte is an alias for unsigned 8-bit integer numbers.
type byte = uint8

// rune is an alias for int32.
type rune = int32

// intSize is a Size-bit signed integer number. The signed integer
// numbers can be instantiated in any bit sizes.
type intSize int

// uintSize is a Size-bit unsigned integer number. The unsigned
// integer numbers can be instantiated in any bit sizes.
type uintSize uint

// stringSize defines Size-bit long string.
type stringSize string

func copy(dst, src []Type) int32 {}

// The floorPow2 built-in function returns the power of 2 number that
// is smaller than or equal to the argument value.
func floorPow2(v int) int {}

// The len built-in function returns the length of the argument value,
// according to its type:
//
//	Array:  the number of elements in the array
//	String: the number of bytes in the string
func len(v Type) int32 {}

// The native built-in function loads native circuit from the named
// file. The circuit must be located in the same directory as the
// calling MPCL script. The native built-in function supports the
// following circuit formats:
//
//	.circ   Bristol circuit format
//	.mpclc  compiled MPCL circuit format
func native(name string) []Type {}

// The size built-in function returns the size of the argument value
// in bits. The argument value can be of any type.
func size(v Type) int32 {}

// The panic built-in function terminates the compilation with an
// error message. The first argument is used as a format string and
// the remaining arguments are positional arguments for the formatted
// message. Any extra arguments are appended to the result string,
// separated by a space character.
func panic(args any) {}
